; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 2
; RUN: llc -mtriple=riscv32 -mattr=+xtheadvector -verify-machineinstrs \
; RUN:   < %s | FileCheck %s

declare <vscale x 1 x i64> @llvm.riscv.th.vmv.v.x.nxv1i64(
  <vscale x 1 x i64>,
  i64,
  i32);

define <vscale x 1 x i64> @intrinsic_vmv_v_x_i_nxv1i64_vlmax() nounwind {
; CHECK-LABEL: intrinsic_vmv_v_x_i_nxv1i64_vlmax:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    th.vsetvli a0, zero, e32, m1, d1
; CHECK-NEXT:    th.vmv.v.i v8, 3
; CHECK-NEXT:    ret
entry:
  %a = call <vscale x 1 x i64> @llvm.riscv.th.vmv.v.x.nxv1i64(
    <vscale x 1 x i64> undef,
    i64 12884901891,
    i32 -1)

  ret <vscale x 1 x i64> %a
}

declare <vscale x 2 x i64> @llvm.riscv.th.vmv.v.x.nxv2i64(
  <vscale x 2 x i64>,
  i64,
  i32);

define <vscale x 2 x i64> @intrinsic_vmv_v_x_i_nxv2i64_vlmax() nounwind {
; CHECK-LABEL: intrinsic_vmv_v_x_i_nxv2i64_vlmax:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    th.vsetvli a0, zero, e32, m2, d1
; CHECK-NEXT:    th.vmv.v.i v8, 3
; CHECK-NEXT:    ret
entry:
  %a = call <vscale x 2 x i64> @llvm.riscv.th.vmv.v.x.nxv2i64(
    <vscale x 2 x i64> undef,
    i64 12884901891,
    i32 -1)

  ret <vscale x 2 x i64> %a
}

declare <vscale x 4 x i64> @llvm.riscv.th.vmv.v.x.nxv4i64(
  <vscale x 4 x i64>,
  i64,
  i32);

define <vscale x 4 x i64> @intrinsic_vmv_v_x_i_nxv4i64_vlmax() nounwind {
; CHECK-LABEL: intrinsic_vmv_v_x_i_nxv4i64_vlmax:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    th.vsetvli a0, zero, e32, m4, d1
; CHECK-NEXT:    th.vmv.v.i v8, 3
; CHECK-NEXT:    ret
entry:
  %a = call <vscale x 4 x i64> @llvm.riscv.th.vmv.v.x.nxv4i64(
    <vscale x 4 x i64> undef,
    i64 12884901891,
    i32 -1)

  ret <vscale x 4 x i64> %a
}

declare <vscale x 8 x i64> @llvm.riscv.th.vmv.v.x.nxv8i64(
  <vscale x 8 x i64>,
  i64,
  i32);

define <vscale x 8 x i64> @intrinsic_vmv_v_x_i_nxv8i64_vlmax() nounwind {
; CHECK-LABEL: intrinsic_vmv_v_x_i_nxv8i64_vlmax:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    th.vsetvli a0, zero, e32, m8, d1
; CHECK-NEXT:    th.vmv.v.i v8, 3
; CHECK-NEXT:    ret
entry:
  %a = call <vscale x 8 x i64> @llvm.riscv.th.vmv.v.x.nxv8i64(
    <vscale x 8 x i64> undef,
    i64 12884901891,
    i32 -1)

  ret <vscale x 8 x i64> %a
}
